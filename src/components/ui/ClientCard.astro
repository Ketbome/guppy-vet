---
export interface Props {
	name: string;
	image: string;
	status: string;
	treatment: string;
	treatmentIcon: string;
	badgeText: string;
	badgeIcon: string;
}

const { name, image, status, treatment, treatmentIcon, badgeText, badgeIcon } = Astro.props;
---

<div class="client-card">
	<div class="client-image">
		<img src={image} alt={`${name} - Mascota feliz en Guppy Vet`} class="client-img">
		<div class="client-overlay">
			<div class="success-badge">
				<i class={`fas ${badgeIcon}`}></i>
				<span>{badgeText}</span>
			</div>
		</div>
	</div>
	<div class="client-info">
		<div class="client-header">
			<h4 class="client-name">{name}</h4>
			<div class="client-status">
				<i class="fas fa-paw"></i>
				<span>{status}</span>
			</div>
		</div>
		<div class="client-treatment">
			<i class={`fas ${treatmentIcon}`}></i>
			<span>{treatment}</span>
		</div>
	</div>
</div>

<style>
	/* Client Card Component */
	.client-card {
		flex: 0 0 320px;
		background: white;
		border-radius: var(--border-radius);
		overflow: hidden;
		box-shadow: var(--shadow-medium);
		border: 1px solid var(--border-color);
		transition: all 0.4s ease;
		position: relative;
		transform: translateY(20px);
		opacity: 0;
	}

	.client-card.animate-in {
		transform: translateY(0);
		opacity: 1;
	}

	.client-card:hover {
		transform: translateY(-12px) scale(1.02);
		box-shadow: var(--shadow-large);
	}

	.client-image {
		height: 200px;
		overflow: hidden;
		position: relative;
	}

	.client-img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.4s ease;
	}

	.client-card:hover .client-img {
		transform: scale(1.1);
	}

	.client-overlay {
		position: absolute;
		top: 1rem;
		right: 1rem;
		z-index: 2;
	}

	.success-badge {
		background: rgba(37, 154, 140, 0.95);
		color: white;
		padding: 0.5rem 0.75rem;
		border-radius: 20px;
		font-size: 0.75rem;
		font-weight: 600;
		display: flex;
		align-items: center;
		gap: 0.5rem;
		backdrop-filter: blur(10px);
		box-shadow: 0 4px 15px rgba(37, 154, 140, 0.3);
	}

	.success-badge i {
		font-size: 0.8rem;
	}

	/* Client Info */
	.client-info {
		padding: 1.5rem;
	}

	.client-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 1rem;
	}

	.client-name {
		font-size: 1.25rem;
		font-weight: 700;
		color: var(--text-dark);
		margin: 0;
	}

	.client-status {
		display: flex;
		align-items: center;
		gap: 0.25rem;
		background: rgba(37, 154, 140, 0.1);
		color: var(--primary-color);
		padding: 0.25rem 0.5rem;
		border-radius: 12px;
		font-size: 0.75rem;
		font-weight: 600;
	}

	.client-status i {
		font-size: 0.7rem;
	}

	.client-treatment {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--primary-color);
		font-weight: 600;
		font-size: 0.85rem;
		padding: 0.5rem;
		background: rgba(37, 154, 140, 0.05);
		border-radius: 8px;
		border-left: 3px solid var(--primary-color);
	}

	.client-treatment i {
		font-size: 0.9rem;
	}

	/* Responsive Design */
	@media (max-width: 768px) {
		.client-card {
			flex: 0 0 280px;
		}

		.client-image {
			height: 180px;
		}

		.client-info {
			padding: 1.25rem;
		}
	}

	@media (max-width: 480px) {
		.client-card {
			flex: 0 0 260px;
		}

		.client-header {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}

		.client-name {
			font-size: 1.1rem;
		}

		.client-info {
			padding: 1rem;
		}
	}

	/* Loading animation */
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.client-card.animate-in {
		animation: fadeInUp 0.6s ease forwards;
	}
</style>
